services:
  # 1. Redis Servisi
  redis:
    image: "redis:alpine"
    container_name: azuraforge_redis
    ports: ["6379:6379"]
    volumes: ["redis_data:/data"]

  # 2. YENİ: PostgreSQL Veritabanı Servisi
  postgres:
    image: postgres:15-alpine
    container_name: azuraforge_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  # --- ANA PLATFORM SERVİSLERİ ---

  # 3. API Servisi
  api:
    container_name: azuraforge_api
    build:
      context: ./api
      dockerfile: Dockerfile
    command: start-api
    ports: ["8000:8000"]
    volumes:
      - ./api:/app
      - ${REPORTS_DIR}:/app/reports
      - ${CACHE_DIR}:/app/.cache
    environment:
      - REDIS_URL=${REDIS_URL}
      - REPORTS_DIR=/app/reports
      - CACHE_DIR=/app/.cache
      # YENİ: Veritabanı bağlantı bilgisi
      - DATABASE_URL=${DATABASE_URL}
    # YENİ: Veritabanı ve Redis'e bağımlı
    depends_on: [redis, postgres]

  # 4. Worker Servisi
  worker:
    container_name: azuraforge_worker
    build:
      context: ./worker
      dockerfile: Dockerfile
    command: start-worker
    volumes:
      - ./worker:/app
      - ${REPORTS_DIR}:/app/reports
      - ${CACHE_DIR}:/app/.cache
    environment:
      - REDIS_URL=${REDIS_URL}
      - REPORTS_DIR=/app/reports
      - CACHE_DIR=/app/.cache
      # YENİ: Veritabanı bağlantı bilgisi
      - DATABASE_URL=${DATABASE_URL}
    # YENİ: Veritabanı ve Redis'e bağımlı
    depends_on: [redis, postgres]

  # 5. Dashboard Servisi
  dashboard:
    container_name: azuraforge_dashboard
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    command: npm run dev -- --host 0.0.0.0
    ports: ["5173:5173"]
    volumes:
      - ./dashboard:/app
      - /app/node_modules
    depends_on: [api]

volumes:
  redis_data:
  postgres_data: # YENİ: Postgres verilerini kalıcı tutmak için volume